root: true
parserOptions:
  ecmaVersion: 2017
  ecmaFeatures:
    jsx: false
    impliedStrict: false
  sourceType: script    # 'module' to use import & export but node isn't ready

env:
  es6: true
  node: true

globals:
  process: true

rules:
  # possible errors
  comma-dangle: [2, "never"]
  no-cond-assign: [2, "except-parens"]
  no-console: 0
  no-constant-condition: 2
  no-control-regex: 2
  no-debugger: 2
  no-dupe-args: 2
  no-dupe-keys: 2
  no-duplicate-case: 2
  no-empty: 2
  no-empty-character-class: 2
  no-ex-assign: 2
  no-extra-boolean-cast: 2
  no-extra-parens: 2
  no-extra-semi: 2
  no-func-assign: 2
  no-inner-declarations: [2, "functions"]
  no-invalid-regexp: 2
  no-irregular-whitespace: 2
  no-negated-in-lhs: 2
  no-obj-calls: 2
  no-regex-spaces: 2
  no-sparse-arrays: 2
  no-unreachable: 2
  use-isnan: 2
  valid-jsdoc: 0
  valid-typeof: 2
  no-unexpected-multiline: 2

  # best practices
  block-scoped-var: 2
  complexity: [1, 12]
  consistent-return: 2
  curly: [2, all]
  default-case: 2
  dot-notation: [2, {allowKeywords: true}]
  dot-location: [2, "property"]
  eqeqeq: 2
  guard-for-in: 0
  no-alert: 2
  no-caller: 2
  no-div-regex: 2
  no-else-return: 2
  no-eq-null: 2
  no-eval: 2
  no-extend-native: 2
  no-extra-bind: 2
  no-fallthrough: 2
  no-floating-decimal: 2
  no-implicit-coercion: [1, {boolean: false, number: true, string: false}]
  no-implied-eval: 2
  no-iterator: 2
  no-labels: 2
  no-lone-blocks: 2
  no-loop-func: 2
  no-multi-spaces: [2, {ignoreEOLComments: true, exceptions: {Property: true, VariableDeclarator: true, ImportDeclaration: true}}]
  no-multi-str: 2
  no-native-reassign: 2
  no-new: 2
  no-new-wrappers: 2
  no-octal: 2
  no-octal-escape: 2
  no-param-reassign: 0
  no-process-env: 0
  no-proto: 2
  no-redeclare: 2
  no-return-assign: [2, "except-parens"]
  no-script-url: 2
  no-self-compare: 2
  no-sequences: 2
  no-throw-literal: 2
  no-unused-expressions: [2, {allowShortCircuit: true}]
  no-useless-call: 1
  no-useless-concat: 2
  no-void: 0
  no-warning-comments: [0, {terms: ["todo", "fixme"], "location": "start"}]
  no-with: 2
  radix: 2
  vars-on-top: 2
  no-vars: 0
  wrap-iife: 2
  yoda: 2

  # strict
  strict: [2, "global"]

  # variables
  no-catch-shadow: 0
  no-delete-var: 1
  no-label-var: 2
  no-shadow: 0
  no-shadow-restricted-names: 2
  no-undef: 2
  no-undef-init: 2
  no-undefined: 0
  no-unused-vars: [2, {vars: "local", args: "none", "varsIgnorePattern": "env"}]
  no-use-before-define: 2
  init-declarations: 0

  # style
  array-bracket-spacing: [1, "never"]
  block-spacing: [1, "never"]
  # this doesn't work as we need it to and our editor is smart enough that its' not an issue
  indent: [0, 4, {SwitchCase: 1, VariableDeclarator: { var: 1, let: 1, const: 1}}]
  brace-style: [2, 1tbs, {allowSingleLine: true}]
  camelcase: 0
  comma-spacing: [1, {before: false, after: true}]
  comma-style: [1, "last"]
  computed-property-spacing: [2, "never"]
  consistent-this: [2, "self"]
  eol-last: 1
  func-names: 0
  func-style: 0
  jsx-quotes: [1, "prefer-double"]
  key-spacing: [1, {beforeColon: false, afterColon: true}]
  keyword-spacing: [0, {}]
  lines-around-comment: [1, {beforeBlockComment: true, beforeLineComment: true, allowBlockStart: true, allowObjectStart: true}]
  max-nested-callbacks: [2, 5]
  new-cap: [2, {newIsCap: true, capIsNew: true, newIsCapExceptions: ["default", "model"], capIsNewExceptions: ["Router"]}]
  new-parens: 2
  newline-after-var: [1, "always"]
  no-array-constructor: 2
  no-inline-comments: 0
  no-lonely-if: 2
  no-mixed-spaces-and-tabs: 1
  no-multiple-empty-lines: 1
  no-nested-ternary: 0
  no-new-object: 2
  no-spaced-func: 1
  no-ternary: 0
  no-trailing-spaces: 1
  no-underscore-dangle: 0
  one-var: 0
  operator-assignment: 0
  operator-linebreak: [2, "none"]
  # the configuration of this rule is diff between gruntify-eslint and brackets-eslint
  padded-blocks: 0
  quote-props: [2, "consistent-as-needed"]
  quotes: [0, "single"]
  semi: [2, "always"]
  semi-spacing: [1, {before: false, after: true}]
  sort-vars: 0
  #space-after-keywords: [1, always]
  space-before-blocks: [1, "always"]
  space-before-function-paren: [1, {anonymous: always, named: never}]
  space-in-parens: [1, "never"]
  space-infix-ops: 1
  #space-return-throw-case: 2
  space-unary-ops: [1, {"words": true, "nonwords": false}]
  spaced-comment: [2, "always", {"exceptions": ["-", "+", "="], "markers": ["/", "!"]}]
  wrap-regex: 0
  generator-star-spacing: [2, "after"]

  #es6
  no-class-assign: 2
  no-const-assign: 2
  no-dupe-class-members: 2
  no-this-before-super: 2
  prefer-template: 1

  #node-js
  callback-return: [2, ["callback", "cb", "next"]]
  global-require: 0
  handle-callback-err: [2, "^(err|error)$"]
  no-mixed-requires: 2
  # if you have newer eslint, this is what you want but it can conflict with one-var
  #no-mixed-requires: [2, {allowCall: false, grouping: true}]
  no-new-require: 2
  no-path-concat: 2
  no-process-exit: 0
  no-restricted-modules: 0
  no-sync: 0

  # legacy
  max-depth: [2, 5]
  max-len: [1, 120, 4, {ignoreComments: true, ignoreUrls: true}]
  max-params: [2, 5]
  max-statements: [1, 50]
  no-bitwise: 0
  no-plusplus: 0
